USE [nombreDeTuBaseDeDatos]
GO
/****** Object:  UserDefinedFunction [dbo].[FuncionObtenerNumerosDeCadena]    Script Date: 16/02/2023 06:31:51 p. m. ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Autor:		Daniel Alejandro Gutierrez Ruiz.
-- Descripcion:	Obtiene los n√∫meros contenidos en una cadena y los devuelve en una lista de decimales.
-- Regresa:		Lista de decimales encontrados.
-- =============================================
CREATE FUNCTION [dbo].[FuncionObtenerNumerosDeCadena] 
(
	@cadena NVARCHAR(MAX),
	@siCadenaEstaVaciaObtenerUnCero BIT = 0
)
RETURNS @numerosEncontrados table(numero decimal(38,19))
AS
BEGIN
	IF @siCadenaEstaVaciaObtenerUnCero = 1 AND TRIM(@cadena) = ''
		SET @cadena = '0'

	IF @cadena LIKE '%[0-9]%'
	--Contiene al menos un numero
	BEGIN
		set @cadena = REPLACE(@cadena, ' ','')
		DECLARE @digitosNumeroActual TABLE(orden int, digitos CHAR)
		DECLARE @contador INT = 0,
			@numeroCaracteres INT = LEN(@cadena) + 1,
			@caracterActual CHAR,
			@leyendoNumero BIT = 0,
			@esNegativo BIT = 0

		WHILE @contador < @numeroCaracteres
		BEGIN
			IF @contador = @numeroCaracteres - 1
				SET @caracterActual = ' '
			ELSE
				SET @caracterActual = SUBSTRING(@cadena, @contador + 1, 1)
		
			IF @caracterActual LIKE '[0-9]' OR (@leyendoNumero = 1 AND @caracterActual = ',') OR @caracterActual = '.' OR (@caracterActual = '-' AND @leyendoNumero = 0 AND SUBSTRING(@cadena, @contador + 2, 1) LIKE '[0-9]')
			BEGIN
				SET @leyendoNumero = 1

				IF @caracterActual = '-' OR (@contador > 0 AND SUBSTRING(@cadena, @contador, 1) = '-')
					SET @esNegativo = 1

				IF @caracterActual != ',' AND @caracterActual != '-'
					INSERT INTO @digitosNumeroActual(orden, digitos) VALUES(ISNULL((SELECT MAX(orden) + 1 FROM @digitosNumeroActual), 0), @caracterActual)
			END
			ELSE
			IF @leyendoNumero = 1
			BEGIN
				SET @leyendoNumero = 0
				
				IF EXISTS(SELECT * FROM @digitosNumeroActual)
				BEGIN
					IF NOT((SELECT top 1 digitos FROM @digitosNumeroActual ORDER BY orden ASC) = '.' AND (SELECT COUNT(*) FROM @digitosNumeroActual) = 1)
					BEGIN
						IF (SELECT top 1 digitos FROM @digitosNumeroActual ORDER BY orden ASC) = '.'
							INSERT INTO @digitosNumeroActual(orden, digitos) values(ISNULL((SELECT MIN(orden) - 1 FROM @digitosNumeroActual), 0), '0')
						ELSE
							IF ((SELECT top 1 digitos FROM @digitosNumeroActual order by orden DESC) = '.')
								INSERT INTO @digitosNumeroActual(orden, digitos) VALUES(ISNULL((SELECT MAX(orden) + 1 FROM @digitosNumeroActual), 0), '0')
							
							--Verificamos que todos los digitos capturados en @digitosNumeroActual sean validos
							IF NOT EXISTS(SELECT * FROM @digitosNumeroActual WHERE digitos NOT LIKE '[0-9]' AND digitos NOT LIKE '.') AND (SELECT COUNT(*) FROM @digitosNumeroActual WHERE digitos = '.') <= 1
							BEGIN
								INSERT INTO @numerosEncontrados(numero) VALUES(
								CAST(
								CONCAT(CASE WHEN @esNegativo = 1 THEN '-' ELSE '' END,		(SELECT STRING_AGG(digitos, '') FROM @digitosNumeroActual)) AS DECIMAL(38, 19)
									)
								)
							END
					END
					
					DELETE FROM @digitosNumeroActual
				END
				
				SET @esNegativo = 0
			END

			SET @contador += 1
		END
	END
	
	RETURN
END
